# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

# TODO: harden runner

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.11"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # https://github.com/snok/install-poetry#workflow-examples-and-tips

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          # installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            .venv
          key: venv-python${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root --verbose
          poetry show

      # - name: Restore cached dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.cache/pip
      #       ~/.cache/pre-commit
      #     key: ${{ matrix.python-version }}-${{ hashFiles('poetry.lock', '.pre-commit-config.yaml') }}
      #     restore-keys: |
      #       ${{ matrix.python-version }}-

      # - name: Install CI dependencies with pip
      #   run: |
      #     python -m pip install -r .github/workflows/requirements.txt

      - name: Install project
        run: |
          poetry install --only-root --no-interaction --verbose
          poetry show

          source .venv/bin/activate
          pip list
          services-test2 --version

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: poetry run pre-commit run --all-files

      - name: Run test suite with pytest
        run: poetry run pytest --cov

      # todo coverage

  release:
    needs: tests
    if: github.repository == 'afuetterer/services-test2' && github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install CI dependencies with pip
        run: python -m pip install python-semantic-release

      # https://python-semantic-release.readthedocs.io/en/latest/automatic-releases/github-actions.html
      - name: Publish semantic release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          semantic-release publish -v DEBUG

# TODO: push to test pypi

# TODO: docs
