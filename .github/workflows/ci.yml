# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
name: CI

on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/ci.yml"
      - "src/**"
      - "tests/**"
      - "pyproject.toml"
      - "poetry.lock"
  pull_request:
    branches: [main]

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # https://github.com/github/codeql-action
  # https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/customizing-code-scanning

  # codeql-analysis:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     actions: read
  #     security-events: write
  #   steps:
  #     - name: Harden Runner
  #       uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # v2.2.0
  #       with:
  #         disable-sudo: true
  #         egress-policy: block
  #         allowed-endpoints: >
  #           api.github.com:443
  #           files.pythonhosted.org:443
  #           github.com:443
  #           pypi.org:443
  #           uploads.github.com:443

  #     - name: Checkout repository
  #       uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@17573ee1cc1b9d061760f3a006fc4aac4f944fd5 # v2.2.4
  #       with:
  #         languages: python

  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@17573ee1cc1b9d061760f3a006fc4aac4f944fd5 # v2.2.4

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.11"
          # - "3.12-dev"

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # v2.2.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443
            test.pypi.org:443

      - name: Check out the repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Install poetry
        run: pipx install poetry

      # https://github.com/actions/setup-python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install dependencies with poetry
        run: poetry install --no-interaction --verbose --with=docs,release

      # https://github.com/pre-commit/action
      - name: Run code quality tests with pre-commit
        if: matrix.python-version == '3.11'
        uses: pre-commit/action@646c83fcd040023954eafda54b4db0192ce70507 # v3.0.0

      - name: Run test suite with pytest
        run: poetry run pytest --cov --cov-report=xml:cobertura.xml --junitxml=junit.xml

      # https://github.com/actions/upload-artifact
      - name: Upload coverage report
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: coverage-data
          path: |
            cobertura.xml
            junit.xml
          if-no-files-found: ignore
          retention-days: 1

  coverage:
    needs: [tests]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # v2.2.0
        with:
          egress-policy: audit

      # https://github.com/actions/download-artifact
      - name: Download coverage report
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.02
        with:
          name: coverage-data

      # https://github.com/MishaKav/pytest-coverage-comment
      - name: Publish coverage report comment
        uses: MishaKav/pytest-coverage-comment@e2c4b20b8a59537ce08ed767c5bb63581e0651ae # v1.1.45
        if: github.repository == 'afuetterer/services-test2'
        with:
          title: Coverage report
          pytest-xml-coverage-path: ./cobertura.xml
          junitxml-title: Summary
          junitxml-path: ./junit.xml

      # TODO: Badge

  release:
    needs: [tests] #, codeql-analysis]
    if: >-
      github.repository == 'afuetterer/services-test2'
      && github.event_name == 'push'
      && github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57 # v2.2.0
        with:
          egress-policy: audit

      - name: Check out the repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
        with:
          python-version: "3.11"
          cache: "poetry"

      - name: Install dependencies with poetry
        run: poetry install --no-interaction --verbose --only=release

      # https://python-semantic-release.readthedocs.io/en/latest/automatic-releases/github-actions.html
      - name: Publish semantic release
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          poetry run semantic-release publish --verbosity=DEBUG
