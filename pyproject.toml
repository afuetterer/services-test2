[tool.poetry]
name = "services-test2"
version = "0.12.2"
authors = ["Heinz-Alexander Fuetterer <fuetterh@posteo.de>"]
description = "services-test2"
license = "MIT"
readme = "README.md"
repository = "https://github.com/afuetterer/services-test2"
documentation = "https://afuetterer.github.io/services-test2"

packages = [
    { include = "services_test2", from = "src" },
]
classifiers = [
    "Development Status :: 1 - Planning",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",

    # add more here?
]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
httpx = ">=0.23.3"
typer = {extras = ["all"], version = ">=0.7.0"}

[tool.poetry.group.dev.dependencies]
coverage-badge = ">=1.1.0"
pre-commit = ">=3.0.2"
pytest-cov = ">=4.0.0"
pytest-mock = ">=3.10.0"

[tool.poetry.group.docs]
optional = true
[tool.poetry.group.docs.dependencies]
mkdocs = ">=1.4.2"
mkdocstrings = {extras = ["python"], version = ">=0.20.0"}
mkdocs-click = ">=0.8.0"
mkdocs-include-markdown-plugin = ">=4.0.3"
mkdocs-gen-files = ">=0.4.0"
mkdocs-literate-nav = ">=0.6.0"
mkdocs-material = ">=9.0.6"
mkdocs-section-index = ">=0.3.5"

[tool.poetry.group.release]
optional = true
[tool.poetry.group.release.dependencies]
python-semantic-release = ">=7.33.1"

[tool.poetry.scripts]
services-test2 = "services_test2.__main__:app"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.black]
# https://black.readthedocs.io/en/stable/usage_and_configuration
line-length = 100
target_version = ["py38", "py39", "py310", "py311"]

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
python_version = "3.8"
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/stable/customize.html
testpaths = "tests"

[tool.coverage.run]
# https://coverage.readthedocs.io/en/7.0.5/config.html#configuration-reference
branch = true
parallel = true
# source = ["src"]

# [tool.coverage.paths]
# # TODO tox issue?
# source = [
#   "src/services_test2",
# ]

[tool.coverage.report]
skip_empty = true

[tool.ruff]
# https://github.com/charliermarsh/ruff#configuration
line-length = 100
select = ["B", "E", "F", "I", "S", "TCH", "UP"]
src = ["src", "tests"]
# Always autofix, but never try to fix "F401" (unused imports).
fix = true
unfixable = ["F401"]
target-version = "py38"

[tool.ruff.per-file-ignores]
# https://github.com/charliermarsh/ruff#flake8-bandit-s
# ignore "S101" (assert-used) in test files
"test_*.py" = ["S101"]

[tool.ruff.isort]
# https://github.com/charliermarsh/ruff#isort
known-first-party = ["services_test", "tests"]

[tool.ruff.pyupgrade]
# https://github.com/charliermarsh/ruff#pyupgrade
keep-runtime-typing = true

[tool.semantic_release]
# https://python-semantic-release.readthedocs.io/en/latest/configuration.html
branch = "main"
commit_author = "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
commit_subject = "chore: release {version}"
commit_message = "[skip ci]"
version_toml = "pyproject.toml:tool.poetry.version"
version_pattern = [
  'CITATION.cff:^version: {version}$'
]
# TODO: does this work?
upload_to_pypi = false
upload_to_release = true
build_command = "poetry build"
# Update release date in CITATION.cff
pre_commit_command = '''
sed -i -r "s/(date-released: ).*/\1$(date '+%Y-%m-%d')/" CITATION.cff &&
sed -i -r "s/^## v/## /" CHANGELOG.md
''' # this does not work. this runs before the changelog is updated!
changelog_components = "semantic_release.changelog.changelog_headers,semantic_release.changelog.compare_url"
major_on_zero = false
hvcs = "github"
# TODO: how to get rid of v prefix in changelog?
# https://github.com/python-semantic-release/python-semantic-release/issues/561
tag_format = "{version}"
